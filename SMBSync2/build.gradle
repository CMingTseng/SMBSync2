apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "27.0.3"

    defaultConfig {
        applicationId "com.sentaroh.android.SMBSync2"
        minSdkVersion 21
        targetSdkVersion 23  //Android 6.0
//        targetSdkVersion 26  //Android 8.0

        versionCode 102
        versionName "1.63"

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    lintOptions {
        disable 'MissingTranslation'
        abortOnError false
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            applicationVariants.all { variant ->
                if (variant.buildType.name.equals("debug")) {
                    variant.outputs.all {
                        def versionName = variant.versionName
                        def versionNumber = variant.versionCode.toString()
                        def date = new java.text.SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date())
                        def mod_name = variant.getPackageApplication().projectBaseName
                        def fileExtension= outputFileName.toString().substring(outputFileName.toString().lastIndexOf(".")+1)
//                        def newName = "${mod_name}_${versionName}_${versionNumber}_${date}.${fileExtension}"
//                        def newName = "${mod_name}_${versionName}_${versionNumber}_debug.${fileExtension}"
                        def newName = "${mod_name}_debug.${fileExtension}"
                        outputFileName = "../../../../../release/"+newName
                    }
                }
            }

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            applicationVariants.all { variant ->
                if (variant.buildType.name.equals("release")) {
                    variant.outputs.all {
                        def versionName = variant.versionName
                        def versionNumber = variant.versionCode.toString()
                        def date = new java.text.SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date())
                        def mod_name = variant.getPackageApplication().projectBaseName
                        def fileExtension= outputFileName.toString().substring(outputFileName.toString().lastIndexOf(".")+1)
//                        def newName = "${mod_name}_${versionName}_${versionNumber}_${date}.${fileExtension}"
                        def newName = "${mod_name}_${versionName}_${versionNumber}_release.${fileExtension}"
                        outputFileName = newName
                    }
                }
            }

        }
    }
}

dependencies {
    implementation files('libs/jcifs-ng-2.1.0-mod-05.jar')
    implementation files('libs/jcifs-1.3.17_patch.jar')
    implementation files('libs/JcifsFile-1.0.1.jar')
    implementation files('libs/slf4j-api-1.7.7.jar')
    implementation files('libs/bcprov-jdk15on-158.jar')

    implementation files('libs/Utilities-1.0.13.aar')
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support:appcompat-v7:26.1.0'

    implementation files('libs/metadata-extractor-2.11.0.jar')
    implementation files('libs/xmpcore-5.1.3.jar')

}
